//apply from: './config.gradle'

buildscript {

  ext.kotlin_version = '1.3.71'

  def usePlugin = true
  def hasPluginLib = project.file('./repos/com/xander/plugin/asm/plugin-library/maven-metadata.xml').exists()
  def hasPlugin = project.file('./repos/com/xander/plugin/asm/maven-metadata.xml').exists()
  ext.isLocalMode = hasPluginLib && hasPlugin && usePlugin

  repositories {
    maven { url uri("./repos") }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/google" }
    google()
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.6.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlin_version}"
    classpath 'com.novoda:bintray-release:0.3.4'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
    if (rootProject.ext.isLocalMode) {
      //格式为 --> group:module:version
      classpath "com.xander.plugin:asm:1.0.0"
    }
  }
}

def isWindows() {
  def os_name = System.properties['os.name'].toString().toLowerCase()
  println "os name: ${os_name}"
  return os_name.contains('window')
}

allprojects {
  repositories {
    maven { url uri('../repos') }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/google" }
    google()
    jcenter()
  }
  // add dependency substitution rules
  configurations.all {
    resolutionStrategy.dependencySubstitution {
      // Substitute project and module dependencies
      substitute module('com.xander.plugin.asm:plugin-library') with project(':asm-plugin-library')
      substitute module('com.xander.dev:tool') with project(':dev-tool-library')
      //substitute project(':asm-plugin-library') with module('com.xander.plugin.asm:plugin-library:1.0.0')
      // Substitute one module dependency for another
      //substitute module('org.gradle:api:2.0') with module('org.gradle:api:2.1')
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}